<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meta.overwash.mapper.MemberMapper">
	
	
	<insert id="insertMember" parameterType="MemberDTO">
		<selectKey resultType="long" order="BEFORE" keyProperty="memberId">
			select member_seq.nextval from dual
		</selectKey>
		insert into member
			(member_id, user_id, member_address, member_contact, nickname)
		values
			(#{memberId}, #{user.userId}, #{memberAddress}, #{memberContact}, #{nickname})
	</insert>
	
	
	<resultMap type="UserDTO" id="user">
		<result column="user_id"		property="userId"/>
		<result column="email"			property="email"/>
		<result column="password"		property="password"/>
	</resultMap>
	
	<resultMap type="MemberDTO" id="memberInfo">
		<result column="member_id" 		property="memberId"/>
		<result column="member_contact"	property="memberContact"/>
		<result column="member_address"	property="memberAddress"/>
		<result column="nickname"	property="nickname"/>
		<association property="user" resultMap="user" />
	</resultMap>
	
	<!-- userId로 getMember로 수정함 -->
	<select id="getMember" resultMap="memberInfo">
		SELECT
			u.user_id	     as user_id,
			u.email 	     as email,
			u.password       as password,
			m.member_id	     as member_id,
			m.member_contact as member_contact,
			m.member_address as member_address,
			m.nickname 		 as nickname
		FROM 
			member m
		JOIN 
			users u ON m.user_id = u.user_id
		WHERE
			m.user_id = #{userId}
	</select>
	
 	<update id="deleteMember" parameterType="Long">
		update users
		set
			enabled = 0
		where
			user_id = (
						select user_id
						from member
						where member_id = #{memberId}
					  )
	</update>
	
	<update id="updateMember" parameterType="MemberDTO">
		update member
		set
			member_address = #{memberAddress},
			nickname = #{nickname}
		where
			member_id = #{memberId}
	</update>

	<select id="getMemberList" parameterType="String" resultMap="memberInfo">
		select
			u.user_id	     as user_id,
			u.email 	     as email,
			u.password       as password,
			m.member_id	     as member_id,
			m.member_contact as member_contact,
			m.member_address as member_address,
			m.nickname 		 as nickname
		from member m
			 join users u
			   on m.user_id = u.user_id
		where
			u.role = #{role}
	</select>

	<select id="getMemberContact" resultType="String">
		select 
			member_contact 
		from 
			member 
		where 
			member_contact = #{memberContact}
	</select>


</mapper>
